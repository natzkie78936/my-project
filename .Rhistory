return(list(mean = mean_val, median = median_val, sd = sd_val))
}
# Apply the function to each factor
reliability_stats <- descriptive_stats(satisfaction_data$reliability_functionality)
information_stats <- descriptive_stats(satisfaction_data$information)
courtesy_stats <- descriptive_stats(satisfaction_data$courtesy)
comfort_stats <- descriptive_stats(satisfaction_data$comfort)
safety_stats <- descriptive_stats(satisfaction_data$safety)
#Ashlee Nicole Lustre
#Item No. 1
satisfaction_data <- data.frame(
student_id = 1:20,
reliability_functionality = c(4, 5, 3, 4, 5, 3, 4, 4, 3, 5, 4, 4, 5, 5, 3, 4, 4, 3, 5, 4),
information = c(3, 4, 2, 4, 3, 3, 4, 4, 3, 5, 3, 4, 4, 4, 3, 4, 4, 2, 5, 4),
courtesy = c(5, 4, 3, 4, 5, 5, 4, 3, 4, 5, 4, 5, 5, 5, 4, 4, 5, 4, 5, 5),
comfort = c(4, 4, 3, 4, 4, 3, 4, 4, 3, 4, 3, 4, 5, 4, 4, 4, 4, 3, 5, 4),
safety = c(5, 4, 4, 5, 4, 3, 5, 4, 4, 5, 4, 4, 4, 5, 5, 4, 5, 4, 5, 5)
)
print(satisfaction_data)
descriptive_stats <- function(column) {
mean_val <- mean(column)
median_val <- median(column)
sd_val <- sd(column)
return(list(mean = mean_val, median = median_val, sd = sd_val))
}
reliability_stats <- descriptive_stats(satisfaction_data$reliability_functionality)
information_stats <- descriptive_stats(satisfaction_data$information)
courtesy_stats <- descriptive_stats(satisfaction_data$courtesy)
comfort_stats <- descriptive_stats(satisfaction_data$comfort)
safety_stats <- descriptive_stats(satisfaction_data$safety)
cat("Reliability/Functionality Satisfaction:\n")
print(reliability_stats)
cat("\nInformation Satisfaction:\n")
print(information_stats)
cat("\nCourtesy Satisfaction:\n")
print(courtesy_stats)
cat("\nComfort Satisfaction:\n")
print(comfort_stats)
cat("\nSafety Satisfaction:\n")
print(safety_stats)
summary(satisfaction_data)
#Ashlee Nicole Lustre
#Item No. 2
AcademicMotivation <- setRefClass("AcademicMotivation",
fields = list(motivation_scores = "numeric"),
methods = list(
initialize = function() {
motivation_scores <<- numeric()
},
input_scores = function(num_students = 20) {
for (i in 1:num_students) {
motivation <- as.numeric(readline(prompt = paste("Enter Academic Motivation score for Student", i, "(1-5): ")))
motivation_scores <<- c(motivation_scores, motivation)
}
},
calculate_sd = function() {
return(sd(motivation_scores))
},
display_sd = function() {
sd_value <- calculate_sd()
cat("The sample standard deviation of Academic Motivation is:", sd_value, "\n")
}
)
)
motivation_data <- AcademicMotivation$new()
motivation_data$input_scores()
AcademicMotivation <- setRefClass("AcademicMotivation",
fields = list(motivation_scores = "numeric"),
methods = list(
initialize = function() {
motivation_scores <<- numeric()
},
input_scores = function(num_students = 20) {
for (i in 1:num_students) {
valid_input <- FALSE
while (!valid_input) {
motivation <- as.numeric(readline(prompt = paste("Enter Academic Motivation score for Student", i, "(1-5): ")))
if (!is.na(motivation) && motivation >= 1 && motivation <= 5) {
motivation_scores <<- c(motivation_scores, motivation)
valid_input <- TRUE
} else {
cat("Invalid input! Please enter a number between 1 and 5.\n")
}
}
}
},
calculate_sd = function() {
if (length(motivation_scores) > 1) {
return(sd(motivation_scores))
} else {
cat("Not enough data to calculate standard deviation.\n")
return(NA)
}
},
display_sd = function() {
sd_value <- calculate_sd()
if (!is.na(sd_value)) {
cat("The sample standard deviation of Academic Motivation is:", sd_value, "\n")
}
}
)
)
motivation_data <- AcademicMotivation$new()
motivation_data$input_scores()
# Define a class to handle academic motivation data
AcademicMotivation <- setRefClass("AcademicMotivation",
fields = list(motivation_scores = "numeric"),
methods = list(
initialize = function() {
motivation_scores <<- numeric()
},
input_scores = function(num_students = 20) {
for (i in 1:num_students) {
valid_input <- FALSE
while (!valid_input) {
motivation <- as.numeric(readline(prompt = paste("Enter Academic Motivation score for Student", i, "(1-5): ")))
if (!is.na(motivation) && motivation >= 1 && motivation <= 5) {
motivation_scores <<- c(motivation_scores, motivation)
valid_input <- TRUE
} else {
cat("Invalid input! Please enter a number between 1 and 5.\n")
}
}
}
},
calculate_sd = function() {
if (length(motivation_scores) > 1) {
return(sd(motivation_scores))
} else {
cat("Not enough data to calculate standard deviation.\n")
return(NA)
}
},
display_sd = function() {
sd_value <- calculate_sd()
if (!is.na(sd_value)) {
cat("The sample standard deviation of Academic Motivation is:", sd_value, "\n")
}
}
)
)
# Create an instance of the class and use it to input scores and calculate standard deviation
motivation_data <- AcademicMotivation$new()
motivation_data$input_scores()
AcademicMotivation <- setRefClass("AcademicMotivation",
fields = list(motivation_scores = "numeric"),
methods = list(
initialize = function() {
motivation_scores <<- numeric()
},
input_scores = function(num_students = 20) {
for (i in 1:num_students) {
valid_input <- FALSE
while (!valid_input) {
input <- readline(prompt = paste("Enter Academic Motivation score for Student", i, "(1-5): "))
motivation <- suppressWarnings(as.numeric(input))  # Convert input to numeric, suppress warnings
if (!is.na(motivation) && motivation >= 1 && motivation <= 5) {
motivation_scores <<- c(motivation_scores, motivation)
valid_input <- TRUE
} else {
cat("Invalid input! Please enter a number between 1 and 5.\n")
}
}
}
},
calculate_sd = function() {
if (length(motivation_scores) > 1) {
return(sd(motivation_scores))
} else {
cat("Not enough data to calculate standard deviation.\n")
return(NA)
}
},
display_sd = function() {
sd_value <- calculate_sd()
if (!is.na(sd_value)) {
cat("The sample standard deviation of Academic Motivation is:", sd_value, "\n")
}
}
)
)
motivation_data <- AcademicMotivation$new()
motivation_data$input_scores()
3
a
AcademicMotivation <- setRefClass("AcademicMotivation",
fields = list(motivation_scores = "numeric"),
methods = list(
initialize = function() {
motivation_scores <<- numeric()
},
input_scores = function(num_students = 20) {
for (i in 1:num_students) {
valid_input <- FALSE
while (!valid_input) {
input <- readline(prompt = paste("Enter Academic Motivation score for Student", i, "(1-5): "))
motivation <- suppressWarnings(as.numeric(input))  # Convert input to numeric, suppress warnings
if (!is.na(motivation) && motivation >= 1 && motivation <= 5) {
motivation_scores <<- c(motivation_scores, motivation)
valid_input <- TRUE
} else {
cat("Invalid input! Please enter a number between 1 and 5.\n")
}
}
}
},
calculate_sd = function() {
if (length(motivation_scores) > 1) {
return(sd(motivation_scores))
} else {
cat("Not enough data to calculate standard deviation.\n")
return(NA)
}
},
display_sd = function() {
sd_value <- calculate_sd()
if (!is.na(sd_value)) {
cat("The sample standard deviation of Academic Motivation is:", sd_value, "\n")
}
}
)
)
motivation_data <- AcademicMotivation$new()
motivation_data$input_scores()
# Define a class to handle academic motivation data
AcademicMotivation <- setRefClass("AcademicMotivation",
fields = list(motivation_scores = "numeric"),
methods = list(
initialize = function() {
motivation_scores <<- numeric()
},
input_scores = function(num_students = 20) {
for (i in 1:num_students) {
valid_input <- FALSE
while (!valid_input) {
input <- readline(prompt = paste("Enter Academic Motivation score for Student", i, "(1-5): "))
motivation <- suppressWarnings(as.numeric(input))  # Convert input to numeric, suppress warnings
if (!is.na(motivation) && motivation >= 1 && motivation <= 5) {
motivation_scores <<- c(motivation_scores, motivation)
valid_input <- TRUE
} else {
cat("Invalid input! Please enter a number between 1 and 5.\n")
}
}
}
},
calculate_sd = function() {
if (length(motivation_scores) > 1) {
return(sd(motivation_scores))
} else {
cat("Not enough data to calculate standard deviation.\n")
return(NA)
}
},
display_sd = function() {
sd_value <- calculate_sd()
if (!is.na(sd_value)) {
cat("The sample standard deviation of Academic Motivation is:", sd_value, "\n")
}
}
)
)
# Create an instance of the class and use it to input scores and calculate standard deviation
motivation_data <- AcademicMotivation$new()
motivation_data$input_scores()   # Input the scores
4
# Define a class to handle academic motivation data
AcademicMotivation <- setRefClass("AcademicMotivation",
fields = list(motivation_scores = "numeric"),
methods = list(
initialize = function() {
motivation_scores <<- numeric()
},
input_scores = function(num_students = 20) {
for (i in 1:num_students) {
valid_input <- FALSE
while (!valid_input) {
input <- readline(prompt = paste("Enter Academic Motivation score for Student", i, "(1-5): "))
motivation <- suppressWarnings(as.numeric(input))  # Convert input to numeric, suppress warnings
# Check for valid numeric input between 1 and 5
if (!is.na(motivation) && motivation >= 1 && motivation <= 5) {
motivation_scores <<- c(motivation_scores, motivation)
valid_input <- TRUE
} else {
cat("Invalid input! Please enter a number between 1 and 5.\n")
}
}
}
},
calculate_sd = function() {
if (length(motivation_scores) > 1) {
return(sd(motivation_scores))
} else {
cat("Not enough data to calculate standard deviation.\n")
return(NA)
}
},
display_sd = function() {
sd_value <- calculate_sd()
if (!is.na(sd_value)) {
cat("The sample standard deviation of Academic Motivation is:", sd_value, "\n")
}
}
)
)
# Create an instance of the class
motivation_data <- AcademicMotivation$new()
# Input the scores
motivation_data$input_scores()
#Ashlee Nicole Lustre - Lab Act 3
#Item No. 1
data <- data.frame(
Reliability = c (4.17, 2.67, 3.50, 3.83, 1.33, 1.50, 2.50, 3.67, 3.50, 3.33, 2.00, 2.83, 4.00, 2.50, 3.50, 3.00, 3.33, 3.00, 3.50, 4.67),
Information c = (4.67, 3.00, 4.33, 3.67, 2.33, 3.33, 3.00, 3.67, 4.33, 4.33, 2.00, 4.00, 3.33, 3.33, 3.33, 3.67, 3.33, 2.67, 4.00, 3.00)
#Ashlee Nicole Lustre - Lab Act 3
> #Item No. 1
#Ashlee Nicole Lustre - Lab Act 3
> #Item No. 1
#Ashlee Nicole Lustre - Lab Act 3
#Item No. 1
data <- data.frame(
+     Reliability = c (4.17, 2.67, 3.50, 3.83, 1.33, 1.50, 2.50, 3.67, 3.50, 3.33, 2.00, 2.83, 4.00, 2.50, 3.50, 3.00, 3.33, 3.00, 3.50, 4.67),
#Ashlee Nicole Lustre - Lab Act 3
#Item No. 1
data <- data.frame(Reliability = c (4.17, 2.67, 3.50, 3.83, 1.33, 1.50, 2.50, 3.67, 3.50, 3.33, 2.00, 2.83, 4.00, 2.50, 3.50, 3.00, 3.33, 3.00, 3.50, 4.67),
Information c = (4.67, 3.00, 4.33, 3.67, 2.33, 3.33, 3.00, 3.67, 4.33, 4.33, 2.00, 4.00, 3.33, 3.33, 3.33, 3.67, 3.33, 2.67, 4.00, 3.00),
data <- data.frame(
Reliability = c(4.17, 2.67, 3.50, 3.83, 1.33, 1.50, 2.50, 3.67, 3.50, 3.33, 2.00, 2.83, 4.00, 2.50, 3.50, 3.00, 3.33, 3.00, 3.50, 4.67),
Information = c(4.67, 3.00, 4.33, 3.67, 2.33, 3.33, 3.00, 3.67, 4.33, 4.33, 2.00, 4.00, 3.33, 3.33, 3.33, 3.67, 3.33, 2.67, 4.00, 3.00),
Courtesy = c(4.00, 1.50, 3.00, 3.25, 2.50, 2.75, 2.75, 3.75, 3.00, 3.25, 2.75, 4.00, 4.00, 3.25, 3.50, 3.25, 2.75, 3.00, 3.75, 3.50),
Comfort = c(4.00, 1.83, 4.00, 2.67, 2.67, 2.50, 2.00, 3.50, 4.00, 2.50, 3.00, 4.83, 3.83, 1.67, 3.17, 2.67, 3.00, 3.83, 2.83, 3.00),
Safety = c(3.50, 2.00, 4.17, 3.17, 1.83, 3.50, 2.83, 3.50, 3.83, 2.83, 2.83, 5.00, 3.83, 2.50, 4.33, 3.17, 3.00, 3.17, 4.00, 3.33)
)
data <- data.frame(
Reliability = c(4.17, 2.67, 3.50, 3.83, 1.33, 1.50, 2.50, 3.67, 3.50, 3.33, 2.00, 2.83, 4.00, 2.50, 3.50, 3.00, 3.33, 3.00, 3.50, 4.67),
Information = c(4.67, 3.00, 4.33, 3.67, 2.33, 3.33, 3.00, 3.67, 4.33, 4.33, 2.00, 4.00, 3.33, 3.33, 3.33, 3.67, 3.33, 2.67, 4.00, 3.00),
Courtesy = c(4.00, 1.50, 3.00, 3.25, 2.50, 2.75, 2.75, 3.75, 3.00, 3.25, 2.75, 4.00, 4.00, 3.25, 3.50, 3.25, 2.75, 3.00, 3.75, 3.50),
Comfort = c(4.00, 1.83, 4.00, 2.67, 2.67, 2.50, 2.00, 3.50, 4.00, 2.50, 3.00, 4.83, 3.83, 1.67, 3.17, 2.67, 3.00, 3.83, 2.83, 3.00),
Safety = c(3.50, 2.00, 4.17, 3.17, 1.83, 3.50, 2.83, 3.50, 3.83, 2.83, 2.83, 5.00, 3.83, 2.50, 4.33, 3.17, 3.00, 3.17, 4.00, 3.33)
)
mean_reliability <- mean(data$Reliability)
mean_information <- mean(data$Information)
mean_courtesy <- mean(data$Courtesy)
mean_comfort <- mean(data$Comfort)
mean_safety <- mean(data$safety)
data <- data.frame(
Reliability = c(4.17, 2.67, 3.50, 3.83, 1.33, 1.50, 2.50, 3.67, 3.50, 3.33, 2.00, 2.83, 4.00, 2.50, 3.50, 3.00, 3.33, 3.00, 3.50, 4.67),
Information = c(4.67, 3.00, 4.33, 3.67, 2.33, 3.33, 3.00, 3.67, 4.33, 4.33, 2.00, 4.00, 3.33, 3.33, 3.33, 3.67, 3.33, 2.67, 4.00, 3.00),
Courtesy = c(4.00, 1.50, 3.00, 3.25, 2.50, 2.75, 2.75, 3.75, 3.00, 3.25, 2.75, 4.00, 4.00, 3.25, 3.50, 3.25, 2.75, 3.00, 3.75, 3.50),
Comfort = c(4.00, 1.83, 4.00, 2.67, 2.67, 2.50, 2.00, 3.50, 4.00, 2.50, 3.00, 4.83, 3.83, 1.67, 3.17, 2.67, 3.00, 3.83, 2.83, 3.00),
Safety = c(3.50, 2.00, 4.17, 3.17, 1.83, 3.50, 2.83, 3.50, 3.83, 2.83, 2.83, 5.00, 3.83, 2.50, 4.33, 3.17, 3.00, 3.17, 4.00, 3.33)
)
mean_reliability <- mean(data$Reliability)
mean_information <- mean(data$Information)
mean_courtesy <- mean(data$Courtesy)
mean_comfort <- mean(data$Comfort)
mean_safety <- mean(data$Safety)
data <- data.frame(
Reliability = c(4.17, 2.67, 3.50, 3.83, 1.33, 1.50, 2.50, 3.67, 3.50, 3.33, 2.00, 2.83, 4.00, 2.50, 3.50, 3.00, 3.33, 3.00, 3.50, 4.67),
Information = c(4.67, 3.00, 4.33, 3.67, 2.33, 3.33, 3.00, 3.67, 4.33, 4.33, 2.00, 4.00, 3.33, 3.33, 3.33, 3.67, 3.33, 2.67, 4.00, 3.00),
Courtesy = c(4.00, 1.50, 3.00, 3.25, 2.50, 2.75, 2.75, 3.75, 3.00, 3.25, 2.75, 4.00, 4.00, 3.25, 3.50, 3.25, 2.75, 3.00, 3.75, 3.50),
Comfort = c(4.00, 1.83, 4.00, 2.67, 2.67, 2.50, 2.00, 3.50, 4.00, 2.50, 3.00, 4.83, 3.83, 1.67, 3.17, 2.67, 3.00, 3.83, 2.83, 3.00),
Safety = c(3.50, 2.00, 4.17, 3.17, 1.83, 3.50, 2.83, 3.50, 3.83, 2.83, 2.83, 5.00, 3.83, 2.50, 4.33, 3.17, 3.00, 3.17, 4.00, 3.33)
)
mean_reliability <- mean(data$Reliability)
mean_information <- mean(data$Information)
mean_courtesy <- mean(data$Courtesy)
mean_comfort <- mean(data$Comfort)
mean_safety <- mean(data$Safety)
data <- data.frame(
Reliability = c(4.17, 2.67, 3.50, 3.83, 1.33, 1.50, 2.50, 3.67, 3.50, 3.33, 2.00, 2.83, 4.00, 2.50, 3.50, 3.00, 3.33, 3.00, 3.50, 4.67),
Information = c(4.67, 3.00, 4.33, 3.67, 2.33, 3.33, 3.00, 3.67, 4.33, 4.33, 2.00, 4.00, 3.33, 3.33, 3.33, 3.67, 3.33, 2.67, 4.00, 3.00),
Courtesy = c(4.00, 1.50, 3.00, 3.25, 2.50, 2.75, 2.75, 3.75, 3.00, 3.25, 2.75, 4.00, 4.00, 3.25, 3.50, 3.25, 2.75, 3.00, 3.75, 3.50),
Comfort = c(4.00, 1.83, 4.00, 2.67, 2.67, 2.50, 2.00, 3.50, 4.00, 2.50, 3.00, 4.83, 3.83, 1.67, 3.17, 2.67, 3.00, 3.83, 2.83, 3.00),
Safety = c(3.50, 2.00, 4.17, 3.17, 1.83, 3.50, 2.83, 3.50, 3.83, 2.83, 2.83, 5.00, 3.83, 2.50, 4.33, 3.17, 3.00, 3.17, 4.00, 3.33)
)
mean_reliability <- mean(data$Reliability)
mean_information <- mean(data$Information)
mean_courtesy <- mean(data$Courtesy)
mean_comfort <- mean(data$Comfort)
mean_safety <- mean(data$Safety)
#Item 1.1
mean_reliability
#Item 1.2
mean_information
#Item 1.3
mean_courtesy
data <- data.frame(
Reliability = c(4.17, 2.67, 3.50, 3.83, 1.33, 1.50, 2.50, 3.67, 3.50, 3.33, 2.00, 2.83, 4.00, 2.50, 3.50, 3.00, 3.33, 3.00, 3.50, 4.67),
Information = c(4.67, 3.00, 4.33, 3.67, 2.33, 3.33, 3.00, 3.67, 4.33, 4.33, 2.00, 4.00, 3.33, 3.33, 3.33, 3.67, 3.33, 2.67, 4.00, 3.00),
Courtesy = c(4.00, 1.50, 3.00, 3.25, 2.50, 2.75, 2.75, 3.75, 3.00, 3.25, 2.75, 4.00, 4.00, 3.25, 3.50, 3.25, 2.75, 3.00, 3.75, 3.50),
Comfort = c(4.00, 1.83, 4.00, 2.67, 2.67, 2.50, 2.00, 3.50, 4.00, 2.50, 3.00, 4.83, 3.83, 1.67, 3.17, 2.67, 3.00, 3.83, 2.83, 3.00),
Safety = c(3.50, 2.00, 4.17, 3.17, 1.83, 3.50, 2.83, 3.50, 3.83, 2.83, 2.83, 5.00, 3.83, 2.50, 4.33, 3.17, 3.00, 3.17, 4.00, 3.33)
)
mean_reliability <- mean(data$Reliability)
mean_information <- mean(data$Information)
mean_courtesy <- mean(data$Courtesy)
mean_comfort <- mean(data$Comfort)
mean_safety <- mean(data$Safety)
#Item 1.1
mean_reliability
#Item 1.2
mean_information
#Item 1.3
mean_courtesy
#Item 1.4
mean_comfort
#Item 1.5
mean_safety
#Ashlee Nicole T. Lustre
#Lab Activity 3
#Item 1
data <- data.frame(
Reliability = c(4.17, 2.67, 3.50, 3.83, 1.33, 1.50, 2.50, 3.67, 3.50, 3.33, 2.00, 2.83, 4.00, 2.50, 3.50, 3.00, 3.33, 3.00, 3.50, 4.67),
Information = c(4.67, 3.00, 4.33, 3.67, 2.33, 3.33, 3.00, 3.67, 4.33, 4.33, 2.00, 4.00, 3.33, 3.33, 3.33, 3.67, 3.33, 2.67, 4.00, 3.00),
Courtesy = c(4.00, 1.50, 3.00, 3.25, 2.50, 2.75, 2.75, 3.75, 3.00, 3.25, 2.75, 4.00, 4.00, 3.25, 3.50, 3.25, 2.75, 3.00, 3.75, 3.50),
Comfort = c(4.00, 1.83, 4.00, 2.67, 2.67, 2.50, 2.00, 3.50, 4.00, 2.50, 3.00, 4.83, 3.83, 1.67, 3.17, 2.67, 3.00, 3.83, 2.83, 3.00),
Safety = c(3.50, 2.00, 4.17, 3.17, 1.83, 3.50, 2.83, 3.50, 3.83, 2.83, 2.83, 5.00, 3.83, 2.50, 4.33, 3.17, 3.00, 3.17, 4.00, 3.33)
)
mean_reliability <- mean(data$Reliability)
mean_information <- mean(data$Information)
mean_courtesy <- mean(data$Courtesy)
mean_comfort <- mean(data$Comfort)
mean_safety <- mean(data$Safety)
#Item 1.1
mean_reliability
#Item 1.2
mean_information
#Item 1.3
mean_courtesy
#Item 1.4
mean_comfort
#Item 1.5
mean_safety
#Ashlee Nicole T. Lustre
#Lab Activity 3
#Item 1
data <- data.frame(
Reliability = c(4.17, 2.67, 3.50, 3.83, 1.33, 1.50, 2.50, 3.67, 3.50, 3.33, 2.00, 2.83, 4.00, 2.50, 3.50, 3.00, 3.33, 3.00, 3.50, 4.67),
Information = c(4.67, 3.00, 4.33, 3.67, 2.33, 3.33, 3.00, 3.67, 4.33, 4.33, 2.00, 4.00, 3.33, 3.33, 3.33, 3.67, 3.33, 2.67, 4.00, 3.00),
Courtesy = c(4.00, 1.50, 3.00, 3.25, 2.50, 2.75, 2.75, 3.75, 3.00, 3.25, 2.75, 4.00, 4.00, 3.25, 3.50, 3.25, 2.75, 3.00, 3.75, 3.50),
Comfort = c(4.00, 1.83, 4.00, 2.67, 2.67, 2.50, 2.00, 3.50, 4.00, 2.50, 3.00, 4.83, 3.83, 1.67, 3.17, 2.67, 3.00, 3.83, 2.83, 3.00),
Safety = c(3.50, 2.00, 4.17, 3.17, 1.83, 3.50, 2.83, 3.50, 3.83, 2.83, 2.83, 5.00, 3.83, 2.50, 4.33, 3.17, 3.00, 3.17, 4.00, 3.33)
)
mean_reliability <- mean(data$Reliability)
mean_information <- mean(data$Information)
mean_courtesy <- mean(data$Courtesy)
mean_comfort <- mean(data$Comfort)
mean_safety <- mean(data$Safety)
#Item 1.1
mean_reliability
#Item 1.2
mean_information
#Item 1.3
mean_courtesy
#Item 1.4
mean_comfort
#Item 1.5
mean_safety
#Ashlee Nicole T. Lustre
#Lab Activity 3
#Item No.2
data <- data.frame( Question = c (4.54, 2.32, 4.07, 4.11, 1.86, 3.57, 3.46, 3.50, 3.79, 4.07, 2.46, 4.00, 3.46, 3.82, 4.36, 2.79, 3.11, 1.25, 3.32, 3.54))
mean_acad_satisfaction <- mean(data$Questions)
mean_acad_satisfaction
#Ashlee Nicole T. Lustre
#Lab Activity 3
#Item No.2
data <- data.frame(Question = c(4.54, 2.32, 4.07, 4.11, 1.86, 3.57, 3.46, 3.50, 3.79, 4.07, 2.46, 4.00, 3.46, 3.82, 4.36, 2.79, 3.11, 1.25, 3.32, 3.54))
mean_acad_satisfaction <- mean(data$Question)
mean_acad_satisfaction
#Ashlee Nicole T. Lustre
#Lab Activity 3
#Item No.2
data <- data.frame(Question = c(4.54, 2.32, 4.07, 4.11, 1.86, 3.57, 3.46, 3.50, 3.79, 4.07, 2.46, 4.00, 3.46, 3.82, 4.36, 2.79, 3.11, 1.25, 3.32, 3.54))
mean_acad_satisfaction <- mean(data$Question)
mean_acad_satisfaction
#Ashlee Nicole T. Lustre
#Lab Activity 3
#Item No.3
data <- c(2.13, 2.20, 2.52, 2.62, 2.65, 2.72, 3.08, 3.13, 3.15, 3.25, 3.32, 3.50, 3.57, 3.62, 3.62, 3.73, 3.80, 3.80, 4.07, 4.13)
percentile_30 <- quantile(data, 0.30)
percentile_75 <- quantile(data, 0.75)
percentile_80 <- quantile(data, 0.80)
#Item No.3.1
percentile_30
#Item No.3.2
percentile_75
#Item No.3.3
percentile_80
#Ashlee Nicole T. Lustre
#Item no.1
#Ashlee Nicole T. Lustre - Activity 6
#Item no.1
#Ashlee Nicole T. Lustre - Activity 6
#Item no.2
# Read in the dataset
Hypothesis_Testing_Data_For_Lab_6_7 <- read_excel("C:/Users/Admin/Downloads/Hypothesis-Testing-Data-For-Lab-6-7.xlsx",
sheet = "Sheet1", n_max = 32,
.name_repair = "minimal")
#Ashlee Nicole T. Lustre - Activity 7
#Item No.1 - Part 2
data$Knowledge_Numeric <- as.numeric(data$`KNOWLEDGE OF THE COLLEGE STUDENTS TOWARDS CLIMATE CHANGE`)
data$Knowledge_Numeric <- as.numeric(data$`KNOWLEDGE OF THE COLLEGE STUDENTS TOWARDS CLIMATE CHANGE`)
#Ashlee Nicole T. Lustre
#Laboratory Act - 7 Part 2
#Item 1
data <- read_excel('C:USER\\Downloads')
#Ashlee Nicole T. Lustre
#Laboratory Act - 7 Part 2
#Item 1
data <- read_excel('C:\\USER\\Downloads')
