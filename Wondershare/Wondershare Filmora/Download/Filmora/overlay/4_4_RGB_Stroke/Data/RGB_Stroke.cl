#define vec2 float2
#define vec3 float3
#define vec4 float4
#define rgb xyz
#define rgba xyzw

vec2 changeScaleColor(float iGlobalTime, float frameInterval){
    const float maxV = 2.0;
    float zoom = 0.94;
    float realInterval = 0.04 * frameInterval;
    float triWaveIndex = floor(iGlobalTime/realInterval);
    float zerothTriWave = iGlobalTime - realInterval * triWaveIndex;
    float timeK = frameInterval * 0.02;
    float halfInterval = frameInterval * 0.02;
    if((int)(zerothTriWave / (realInterval/2.0f)) == 0){
        return (vec2)(1.0 + (zoom-1.0)*zerothTriWave/halfInterval, maxV * zerothTriWave/timeK);
    }
    else{
        return (vec2)(2.0*zoom-1.0+(1.0-zoom)*zerothTriWave/halfInterval, 2.0*maxV - maxV*zerothTriWave/timeK);
    }
}

const sampler_t sampler = CLK_NORMALIZED_COORDS_TRUE | CLK_ADDRESS_MIRRORED_REPEAT | CLK_FILTER_LINEAR;

vec3 blueColor(vec3 rgb,float time)
{
    vec3 blue = (vec3)(0.0);
    blue.r = rgb.r * time;
    blue.g = rgb.g * 0.0;
    blue.b = rgb.b * 0.0;
    return blue;
}
vec3 redColor(vec3 rgb, float time)
{
    vec3 red = (vec3)(0.0);
    red.r = rgb.r * 0.0;
    red.g = rgb.g * 0.0;
    red.b = rgb.b * time;
    return red;
}
vec3 greenColor(vec3 rgb, float time)
{
    vec3 green = (vec3)(0.0);
    green.r = rgb.r * 0.0;
    green.g = rgb.g * time;
    green.b = rgb.b * 0.0;
    return green;
}


vec4 INPUTSRC(image2d_t src_data,__global FilterParam* param, vec2 tc)
{
    tc = (vec2)(tc.x, tc.y)*(vec2)(param->origROI[2], param->origROI[3]) + (vec2)(param->origROI[0], param->origROI[1]);
    return read_imagef(src_data, sampler, tc);
}

float Sample(image2d_t src_data, __global FilterParam* param, vec2 uv)
{
    vec4 color = INPUTSRC(src_data, param, uv);
    return dot(color.rgb, (vec3)(0.114f, 0.587f, 0.299f));
}

float SobelFilter(image2d_t src_data, __global FilterParam* param, vec2 uv, vec2 resolution)
{
    float factor = resolution.y / 433.0f;
    
    float tl = Sample(src_data, param, uv + ((vec2)(-1.0f, 1.0f)/resolution.xy) * factor);
    float tc = Sample(src_data, param, uv + ((vec2)(0.0f, 1.0f)/resolution.xy) * factor);
    float tr = Sample(src_data, param, uv + ((vec2)(1.0f, 1.0f)/resolution.xy) * factor);
    
    float l = Sample(src_data, param, uv + ((vec2)(-1.0f, 0.0f)/resolution.xy) * factor);
    float c = Sample(src_data, param, uv + ((vec2)(0.0f, 0.0f)/resolution.xy) * factor);
    float r = Sample(src_data, param, uv + ((vec2)(1.0f, 0.0f)/resolution.xy) * factor);
    
    float bl = Sample(src_data, param, uv + ((vec2)(-1.0f, -1.0f)/resolution.xy) * factor);
    float bc = Sample(src_data, param, uv + ((vec2)(0.0f, -1.0f)/resolution.xy) * factor);
    float br = Sample(src_data, param, uv + ((vec2)(1.0f, -1.0f)/resolution.xy) * factor);
    
    
    float gx = tl - tr + 2.0f * l - 2.0f * r + bl - br;
    float gy = -tl - 2.0f * tc - tr + bl + 2.0f * bc + br;
    
    return gx*gx+gy*gy;
}

__kernel void MAIN(
                    __read_only image2d_t src_data,
                    __write_only image2d_t dst_data,        //Data in global memory
                    __global FilterParam* param,
                    int alpha,
                    int moveSpeed,
                    int horizontalMove,
                    int vertialMove
                    ) // alpah 0 - 100
{
    int W = get_global_size(0);
    int H = get_global_size(1);
    int w = get_global_id0( param);
    int h = get_global_id1( param);
    float2 resolution = (float2)(W,H);
    float2 iResolution = resolution;
    int2 coordinate = (int2)(get_global_id0( param), get_global_id1( param));
    vec2 fragCoord = (vec2)(get_global_id0( param), get_global_id1( param));
    vec2 tc = ((vec2)(fragCoord.x, fragCoord.y) + (vec2)(0.5f)) /resolution.xy;
    
    vec2 uv = (vec2)(2.0f)*tc-(vec2)(1.0f);
    
    vec4 orig = INPUTSRC(src_data, param, tc);
    float moveVelocity = 60.0f - (float)(moveSpeed) * 0.5f;
    float horiMove = (float)(horizontalMove - 50.0f) / 500.0f;
    float vertMove = (float)(vertialMove - 50.0f) / 500.0f;
    
    vec4 fragColor = (vec4)(0.0f);
    vec2 index = changeScaleColor(param->cur_time, moveVelocity);
    
    vec2 uv1 = (vec2)(tc.x + 0.03f*sin(uv.x)-horiMove,tc.y - 0.02f*sin(uv.y)- 0.02f + vertMove)*index.x;
    uv1.y = uv1.y + (1.0 - index.x);
    float matt1 = step(0.0f, uv1.x) * step(uv1.x, 1.0f) * step(0.0f, uv1.y) * step(uv1.y, 1.0f);
    
    vec2 uv2 = (vec2)(tc.x - 0.03f*sin(uv.x)-horiMove,tc.y - 0.06f*sin(uv.y)- 0.02f + vertMove)*index.x;
    uv2.y = uv2.y + (1.0 - index.x);
    float matt2 = step(0.0f, uv2.x) * step(uv2.x, 1.0f) * step(0.0f, uv2.y) * step(uv2.y, 1.0f);
    
    vec2 uv3 = (vec2)(tc.x-horiMove,tc.y - 0.04f*sin(uv.y)- 0.02f + vertMove)*index.x;
    uv3.y = uv3.y + (1.0 - index.x);
    float matt3 = step(0.0f, uv3.x) * step(uv3.x, 1.0f) * step(0.0f, uv3.y) * step(uv3.y, 1.0f);
    
    float sobelA = SobelFilter(src_data,param,uv1,resolution);
    vec3 cannyColor = blueColor((vec3)(sobelA), index.y)*matt1;
    fragColor += (vec4)(cannyColor, sobelA * index.y);
    
    float sobelB = SobelFilter(src_data,param,uv2,resolution);
    cannyColor = redColor((vec3)(sobelB), index.y)*matt2;
    fragColor += (vec4)(cannyColor, sobelB * index.y);
    
    float sobelC = SobelFilter(src_data,param,uv3,resolution);
    cannyColor = greenColor((vec3)(sobelC), index.y)*matt3;
    fragColor += (vec4)(cannyColor, sobelC * index.y);
    
    fragColor += orig;
    
    fragColor = clamp(fragColor,0.0f,1.0f);
    
    write_imagef(dst_data, (int2)(get_global_id(0),get_global_id(1)), mix(orig,fragColor,(float)(alpha)/100.0f));
}
